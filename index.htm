<!doctype html>
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Input Key Filter Test</title>
	<meta name="author" content="Andrej Hristoliubov anhr@mail.ru">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
	
	<!-- For compatibility of IE browser with audio element in the beep() function.
	https://www.modern.ie/en-us/performance/how-to-use-x-ua-compatible -->
	<meta http-equiv="X-UA-Compatible" content="IE=9"/>
	
	<!--
		Get all scripts from current site.
		You can edit all scripts,
		but my updates in the gitgub https://github.com/anhr/InputKeyFilter project is not available.
	 -->
	<link rel="stylesheet" href="InputKeyFilter.css" type="text/css">		
	<script type="text/javascript" src="Common.js"></script>
	<script type="text/javascript" src="InputKeyFilter.js"></script>
 
	<!--
		Get all scripts from my project in gitgub https://github.com/anhr/InputKeyFilter.
		You can use all my updates immediately if you getting all scripts from my project in gitgub,
		but you can not edit scripts, except if you do a contribute in my github project.
		
		See details in http://stackoverflow.com/questions/17341122/link-and-execute-external-javascript-file-hosted-on-github
	 -->
	 <!--
	<link rel="stylesheet" href="https://rawgit.com/anhr/InputKeyFilter/master/InputKeyFilter.css" type="text/css">		
	<script type="text/javascript" src="https://rawgit.com/anhr/InputKeyFilter/master/Common.js"></script>
	<script type="text/javascript" src="https://rawgit.com/anhr/InputKeyFilter/master/InputKeyFilter.js"></script>
	 -->
	
</head>
<body>
	The filter of value of the text input element on your web page using JavaScript language.
	You can filter the value as an integer number, a float number, or write a custom filter, such as a phone number filter.
	<h1>Input Key Filter Test</h1>
	Integer field: 
	<input id="Integer">
	<script>
		CreateIntFilter("Integer", function(event){//onChange event
				inputKeyFilter.RemoveMyTooltip();
				var elementNewInteger = document.getElementById("NewInteger");
				var integer = parseInt(this.value);
				if(inputKeyFilter.isNaN(integer, this)){
					elementNewInteger.innerHTML = "";
					return;
				}
				//elementNewInteger.innerText = integer;//Uncompatible with FireFox
				elementNewInteger.innerHTML = integer;
			}
			
			//onblur event. Use this function if you want set focus to the input element again if input value is NaN. (empty or invalid)
			, function(event){ inputKeyFilter.isNaN(parseInt(this.value), this); }
		);
	</script>
	 New integer: <span id="NewInteger"></span>

	<hr>
	Float field: 
	<input id="Float" 
		onchange="javascript: onChangeFloat(this)"
		onblur="inputKeyFilter.isNaN(parseFloat(this.value), this);"
	/>
	<script>
		CreateFloatFilter("Float");
		
		function onChangeFloat(input){
			inputKeyFilter.RemoveMyTooltip();
			var elementNewFloat = document.getElementById("NewFloat");
			var float = parseFloat(input.value);
			if(inputKeyFilter.isNaN(float, input)){
				elementNewFloat.innerHTML = "";
				return;
			}
			elementNewFloat.innerHTML = float;
		}
	</script>
	 New float: <span id="NewFloat"></span>

	<hr>
	Custom filter: 
	<input id="PhoneNumber" value="+()--">
	<script>
		function getArrayPhoneNumber(value){
			if (typeof value == 'undefined')
				value = document.getElementById("PhoneNumber").value;
			return value.match(/^(\+?\d*)\((\d*)\)(\d*)-?(\d*)-?(\d*)$/);
		}
		
		function getPhoneNumber(){
			var arrayPhoneNumber = getArrayPhoneNumber();
			if(!arrayPhoneNumber)
				return "";
				
			var phoneNumber = arrayPhoneNumber[1] + arrayPhoneNumber[2] + arrayPhoneNumber[3] + arrayPhoneNumber[4] + arrayPhoneNumber[5];
			return phoneNumber;
		}
		
		inputKeyFilter.Create("PhoneNumber", function(event){//onChange event
				inputKeyFilter.RemoveMyTooltip();
				
				var arrayPhoneNumber = getArrayPhoneNumber();
				if(!arrayPhoneNumber || (arrayPhoneNumber.length != 6)){
					document.getElementById("NewPhoneNumber").innerHTML = "Incorrect format of the phone number";
					return;
				}
				
				var elementNewPhoneNumber = document.getElementById("NewPhoneNumber");
				var phoneNumber = getPhoneNumber();
				if(inputKeyFilter.isNaN(phoneNumber, this)){
					elementNewPhoneNumber.innerHTML = "";
					return;
				}
				elementNewPhoneNumber.innerHTML = phoneNumber;
			}
			, function(elementInput, value){//customFilter
				var arrayPhoneNumber = getArrayPhoneNumber(value);
				if(arrayPhoneNumber == null){
					inputKeyFilter.TextAdd(isRussian() ?
							"Недопустимый формат телефонного номера. Например: +1(234)56-78-90"
							: "Incorrect format of the phone number. Example: +1(234)56-78-90"
						, elementInput);
					if(elementInput.value == "")
						elementInput.value = elementInput.defaultValue;
					return false;
				}
				return true;
			}
			
			//onblur event. Use this function if you want set focus to the input element again if input value is NaN. (empty or invalid)
			, function(event){ inputKeyFilter.isNaN(parseInt(getPhoneNumber()), this); }
		);
	</script>
	 New phone number: <span id="NewPhoneNumber"></span>
	<br/>
	Please type a phone number in the +**(***)***-**-** format. Example: +1(23)456-78-90
	<hr>
	Have a job for me? Please read <a href='../AboutMe/' target="_blank">About Me</a>.
</body>
</html>

<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">
<!--<!doctype html>-->
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Input Key Filter Test</title>
	<meta name="author" content="Andrej Hristoliubov anhr@mail.ru">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
	<meta name="description" content="examples of using of my input key filter of value of the text input element on your web page using JavaScript language."/>
	<meta name="keywords" content="input key filter, input type text, javascript, javascript developing"/>
	
	<!-- For compatibility of IE browser with audio element in the beep() function.
	https://www.modern.ie/en-us/performance/how-to-use-x-ua-compatible -->
	<meta http-equiv="X-UA-Compatible" content="IE=9"/>
	
	<!--
		Get all scripts from current site.
		You can edit all scripts,
		but my updates in the gitgub https://github.com/anhr/InputKeyFilter project is not available.
	 -->
	<link rel="stylesheet" href="InputKeyFilter.css" type="text/css">		
	<script type="text/javascript" src="Common.js"></script>
	<script type="text/javascript" src="InputKeyFilter.js"></script>
 
	<!--
		Get all scripts from my project in gitgub https://github.com/anhr/InputKeyFilter.
		You can use all my updates immediately if you getting all scripts from my project in gitgub,
		but you can not edit scripts, except if you do a contribute in my github project.
		
		See details in http://stackoverflow.com/questions/17341122/link-and-execute-external-javascript-file-hosted-on-github
	 -->
	 <!--
	<link rel="stylesheet" href="https://rawgit.com/anhr/InputKeyFilter/master/InputKeyFilter.css" type="text/css">		
	<script type="text/javascript" src="https://rawgit.com/anhr/InputKeyFilter/master/Common.js"></script>
	<script type="text/javascript" src="https://rawgit.com/anhr/InputKeyFilter/master/InputKeyFilter.js"></script>
	 -->
	
</head>
<body>
	<p><a href='../'>Home</a> | <a href='https://github.com/anhr/InputKeyFilter' target="_blank">GitHub</a></p>
	
	<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<!-- Рекламный блок -->
	<ins class="adsbygoogle"
		 style="display:inline-block;width:728px;height:90px"
		 data-ad-client="ca-pub-2575715742658777"
		 data-ad-slot="8810450588"></ins>
	<script>
	(adsbygoogle = window.adsbygoogle || []).push({});
	</script>	
	<p>
		The filter of value of the text input element on your web page using JavaScript language.
		You can filter the value as an integer number, a float number, or write a custom filter, such as a phone number filter.
	</p>
	<h1>Input Key Filter Test</h1>
	Integer field: 
<!--	<input type="number" id="Integer" value="123"/>-->
	<input id="Integer" value="123" min=10 max=1000 />
	<script>
		CreateIntFilter("Integer", function(event){//onChange event
				inputKeyFilter.RemoveMyTooltip();
				var elementNewInteger = document.getElementById("NewInteger");
				var integer = parseInt(this.value);
				if(inputKeyFilter.isNaN(integer, this)){
					elementNewInteger.innerHTML = "";
					return;
				}
				//elementNewInteger.innerText = integer;//Uncompatible with FireFox
				elementNewInteger.innerHTML = integer;
			}
			
			//onblur event. Use this function if you want set focus to the input element again if input value is NaN. (empty or invalid)
			//, function(event){ inputKeyFilter.isNaN(parseInt(this.value), this); }
		);
	</script>
	 New integer: <span id="NewInteger"></span>

	<hr>
	Float field: 
	<!-- The E format (example -12E-34) is not allowed
	<input type="number" step="any" id="Float"
	-->
	<input id="Float"
		onchange="javascript: onChangeFloat(this)"
		onblur="inputKeyFilter.isNaN(parseFloat(this.value), this);"
		min=5.6
		max=0.123e2
	/>
	<script>
		CreateFloatFilter("Float");
		
		function onChangeFloat(input){
			inputKeyFilter.RemoveMyTooltip();
			var elementNewFloat = document.getElementById("NewFloat");
			var float = inputKeyFilter.parseFloat(input.value);
			if(inputKeyFilter.isNaN(float, input)){
				elementNewFloat.innerHTML = "";
				return;
			}
			if(!inputKeyFilter.isMinMax(input, input.value, true))
				return;

			elementNewFloat.innerHTML = float + " or localized value: " + float.toLocaleString();
		}
	</script>
	 New float: <span id="NewFloat"></span>

	<hr>
	Email: 
<!--	<input id="Email"/>-->
	<input type="email" id="Email" value="username@domain.com"/>
	<script>
		CreateEmailFilter("Email", function(event){//onChange event
				inputKeyFilter.RemoveMyTooltip();
				var elementNewInteger = document.getElementById("NewEmail");
				elementNewInteger.innerHTML = this.value;
			}
			
			//onblur event. Use this function if you want set focus to the input element again if input value is NaN. (empty or invalid)
			, function(event){ this.ikf.customFilter(this); }
		);
	</script>
	 New email: <span id="NewEmail"></span>

	<hr>
	URL: 
	<input type="url" id="Url" value=":"/>
	<script>
		CreateUrlFilter("Url", function(event){//onChange event
				inputKeyFilter.RemoveMyTooltip();
				var elementNewInteger = document.getElementById("NewUrl");
				elementNewInteger.innerHTML = this.value;
			}
			
			//onblur event. Use this function if you want set focus to the input element again if input value is NaN. (empty or invalid)
			, function(event){ this.ikf.customFilter(this); }
		);
	</script>
	 New URL: <span id="NewUrl"></span>

	<hr>
	Custom filter: 
	<input id="PhoneNumber" value="+()--">
	<script>
		function getArrayPhoneNumber(value){
			if (typeof value == 'undefined')
				value = document.getElementById("PhoneNumber").value;
			return value.match(/^(\+?\d*)\((\d*)\)(\d*)-?(\d*)-?(\d*)$/);
		}
		
		function getPhoneNumber(){
			var arrayPhoneNumber = getArrayPhoneNumber();
			if(!arrayPhoneNumber)
				return "";
				
			var phoneNumber = arrayPhoneNumber[1] + arrayPhoneNumber[2] + arrayPhoneNumber[3] + arrayPhoneNumber[4] + arrayPhoneNumber[5];
			return phoneNumber;
		}
		
		inputKeyFilter.Create("PhoneNumber", function(event){//onChange event
				inputKeyFilter.RemoveMyTooltip();
				
				var arrayPhoneNumber = getArrayPhoneNumber();
				if(!arrayPhoneNumber || (arrayPhoneNumber.length != 6)){
					document.getElementById("NewPhoneNumber").innerHTML = "Incorrect format of the phone number";
					return;
				}
				
				var elementNewPhoneNumber = document.getElementById("NewPhoneNumber");
				var phoneNumber = getPhoneNumber();
				if(inputKeyFilter.isNaN(phoneNumber, this)){
					elementNewPhoneNumber.innerHTML = "";
					return;
				}
				elementNewPhoneNumber.innerHTML = phoneNumber;
			}
			, function(elementInput, value){//customFilter
				var arrayPhoneNumber = getArrayPhoneNumber(value);
				if(arrayPhoneNumber == null){
					inputKeyFilter.TextAdd(isRussian() ?
							"Недопустимый формат телефонного номера. Например: +1(234)56-78-90"
							: "Incorrect format of the phone number. Example: +1(234)56-78-90"
						, elementInput);
					if(elementInput.value == "")
						elementInput.value = elementInput.defaultValue;
					return false;
				}
				return true;
			}
			
			//onblur event. Use this function if you want set focus to the input element again if input value is NaN. (empty or invalid)
			, function(event){ inputKeyFilter.isNaN(parseInt(getPhoneNumber()), this); }
		);
	</script>
	 New phone number: <span id="NewPhoneNumber"></span>
	<br/>
	Please type a phone number in the +**(***)***-**-** format. Example: +1(23)456-78-90

	<hr>
	<a href='https://stackoverflow.com/questions/30609844/is-possible-to-make-html-input-type-number-only-show-numbers-which-are-multiple' target="_blank">
		To make html input type number only show numbers which are multiple of 5
	</a>.  
	<input id="MultipleOf5">
	<script>
		function TextAddMultipleOf5(elementInput){
			inputKeyFilter.TextAdd(isRussian() ?
					"разрешается только числа, которые кратны 5. Например: 5 10 15"
					: "only allowed numbers which are multiple of 5. Examples: 5 10 15"
				, elementInput);
		}
		
		function isMultipleOf5(input){
			var integer = parseInt(input.value);
			if(inputKeyFilter.isNaN(integer, input))
				return false;//value is not integer
			if(parseInt(integer/5)*5 != integer)
				return false;//integer is not multiple of 5
			return true;//integer is multiple of 5
		}
		
		inputKeyFilter.Create("MultipleOf5"
			, function(event){//onChange event
				inputKeyFilter.RemoveMyTooltip();
				
				var elementNewMultipleOf5 = document.getElementById("NewMultipleOf5");
				if(isMultipleOf5(this)){
					elementNewMultipleOf5.innerHTML = this.value;
					return;
				}
				elementNewMultipleOf5.innerHTML = "";
				TextAddMultipleOf5(this);
			}
			, function(elementInput, value){//customFilter
				//if(value.match(/^(-?\d*)$/) != null)//value is positive and negative number
				if(value.match(/^(\d*)$/) != null)//value is positive number only
					return true;//value is number
				TextAddMultipleOf5(elementInput);
				return false;//invalid value
			}
			
			//onblur event. Use this function if you want set focus to the input element again if input value is NaN. (empty or invalid)
			, function(event){
				var value;
				if(isMultipleOf5(this))
					value = this.value;
				if(inputKeyFilter.isNaN(parseInt(value), this))
					TextAddMultipleOf5(this);
			}
		);
	</script>
	 New, multiple of 5 number: <span id="NewMultipleOf5"></span>

	<hr>
	Password: 
	<input type="password" id="Password"
		onchange="javascript: onChangePassword(this)"
		onblur="javascript: this.ikf.customFilter(this)"
	/>
	<script>
		function onChangePassword(input){
			inputKeyFilter.RemoveMyTooltip();
			if(!input.ikf.customFilter(input))
				return false;
			var elementNewPassword = document.getElementById("NewPassword");
			elementNewPassword.innerHTML = input.value;
		}
		CreatePasswordFilter("Password"
			, function(elementInput, value){//customFilter
//consoleLog("password customFilter. elementInput = " + elementInput + "\n\n" + printStackTrace().join("nn"));

					if(typeof value == 'undefined')
						value = elementInput.value;
						
					var array = value.match(/([^a-zA-Z\d]+)/);
					if(array != null){
						inputKeyFilter.TextAdd(isRussian() ?
								"Недопустимый символ: " + array[0]
								: "Invalid symbol: " + array[0]
							, elementInput, "uparrowdivred");
						inputKeyFilter.focus(elementInput);
						return false;
					}
					var passwordLengthMin = 6;
					if(value.length < passwordLengthMin){
						inputKeyFilter.TextAdd(isRussian() ?
								"Пароль должен быть длиннее " + passwordLengthMin + " символов."
								: "The password at least " + passwordLengthMin + " characters."
							, elementInput);
						inputKeyFilter.focus(elementInput);
						return false;
					}
					if(value.match(/(\d+)/i) == null){
						inputKeyFilter.TextAdd(isRussian() ?
								"Введите хотя бы одну цифру."
								: "The password must contain at least one digit."
							, elementInput, "uparrowdivyellow");
						inputKeyFilter.focus(elementInput);
						return false;
					}
					if(value.match(/([a-z]+)/) == null){
						inputKeyFilter.TextAdd(isRussian() ?
								"Введите хотя бы одну латинскую букву."
								: "The password must contain at least one letter."
							, elementInput, "uparrowdivyellow");
						inputKeyFilter.focus(elementInput);
						return false;
					}
					if(value.match(/([A-Z]+)/) == null){
						inputKeyFilter.TextAdd(isRussian() ?
								"Введите хотя бы одну заглавную латинскую букву."
								: "The password must contain at least one upper-case letter."
							, elementInput, "uparrowdivyellow");
						inputKeyFilter.focus(elementInput);
						return false;
					}
					return true;
				}
		);
	</script>
	 New password: <span id="NewPassword"></span>
	 
	<hr>
	Have a job for me? Please read <a href='../AboutMe/' target="_blank">About Me</a>.
</body>
</html>
